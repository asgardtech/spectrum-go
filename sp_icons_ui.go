// This file is generated by the generate_components.py script
// Do not edit this file manually

package sp

import "github.com/maxence-charriere/go-app/v10/pkg/app"

// IconsUISize represents the Size of the icon
type IconsUISize string

// IconsUISize values
const (
	IconsUISizeXxs IconsUISize = "xxs"
	IconsUISizeXs  IconsUISize = "xs"
	IconsUISizeS   IconsUISize = "s"
	IconsUISizeM   IconsUISize = "m"
	IconsUISizeL   IconsUISize = "l"
	IconsUISizeXl  IconsUISize = "xl"
	IconsUISizeXxl IconsUISize = "xxl"
)

// spectrumIconsUI represents an sp-icon-ui component
type spectrumIconsUI struct {
	app.Compo
	*styler[*spectrumIconsUI]
	*classer[*spectrumIconsUI]
	*ider[*spectrumIconsUI]

	// Properties
	// Accessibility label for the icon
	PropLabel string
	// Size of the icon
	PropSize IconsUISize
}

// IIconsUI is the interface for sp-icon-ui component methods
type IIconsUI interface {
	app.UI
	Styler[IIconsUI]
	Classer[IIconsUI]
	Ider[IIconsUI]
	Label(string) IIconsUI
	Size(IconsUISize) IIconsUI
	SizeXxs() IIconsUI
	SizeXs() IIconsUI
	SizeS() IIconsUI
	SizeM() IIconsUI
	SizeL() IIconsUI
	SizeXl() IIconsUI
	SizeXxl() IIconsUI
}

// IconsUI Deliver Spectrum UI Icons as registered custom elements, unregistered class definitions, or functions with customizable template tags to be used across various frameworks.
func IconsUI() IIconsUI {
	element := &spectrumIconsUI{
		PropLabel: "",
		PropSize:  "",
	}

	element.styler = newStyler(element)
	element.classer = newClasser(element)
	element.ider = newIder(element)

	return element
}

// Label Accessibility label for the icon
func (c *spectrumIconsUI) Label(label string) IIconsUI {
	c.PropLabel = label
	return c
}

// Size Size of the icon
func (c *spectrumIconsUI) Size(size IconsUISize) IIconsUI {
	c.PropSize = size
	return c
}

func (c *spectrumIconsUI) SizeXxs() IIconsUI {
	return c.Size(IconsUISizeXxs)
}
func (c *spectrumIconsUI) SizeXs() IIconsUI {
	return c.Size(IconsUISizeXs)
}
func (c *spectrumIconsUI) SizeS() IIconsUI {
	return c.Size(IconsUISizeS)
}
func (c *spectrumIconsUI) SizeM() IIconsUI {
	return c.Size(IconsUISizeM)
}
func (c *spectrumIconsUI) SizeL() IIconsUI {
	return c.Size(IconsUISizeL)
}
func (c *spectrumIconsUI) SizeXl() IIconsUI {
	return c.Size(IconsUISizeXl)
}
func (c *spectrumIconsUI) SizeXxl() IIconsUI {
	return c.Size(IconsUISizeXxl)
}

// Style sets a style property with a value
func (c *spectrumIconsUI) Style(key, format string, values ...any) IIconsUI {
	return c.styler.Style(key, format, values...)
}

// Styles sets multiple style properties
func (c *spectrumIconsUI) Styles(styles map[string]string) IIconsUI {
	return c.styler.Styles(styles)
}

// Class adds a class to the element
func (c *spectrumIconsUI) Class(class string) IIconsUI {
	return c.classer.Class(class)
}

// Classes adds multiple classes to the element
func (c *spectrumIconsUI) Classes(classes ...string) IIconsUI {
	return c.classer.Classes(classes...)
}

// Id sets the id of the element
func (c *spectrumIconsUI) Id(id string) IIconsUI {
	return c.ider.Id(id)
}

// Render renders the sp-icon-ui component
func (c *spectrumIconsUI) Render() app.UI {
	element := app.Elem("sp-icon-ui")

	// Set attributes
	if c.PropLabel != "" {
		element = element.Attr("label", c.PropLabel)
	}
	if c.PropSize != "" {
		element = element.Attr("size", string(c.PropSize))
	}

	// Apply styles, classes, and id
	element = element.Styles(c.styler.styles)

	// Apply classes if any
	if len(c.classer.classes) > 0 {
		element = element.Class(c.classer.classes...)
	}

	// Apply id if set
	if c.ider.id != "" {
		element = element.ID(c.ider.id)
	}

	return element
}
